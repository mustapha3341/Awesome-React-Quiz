[{"C:\\Users\\Sani Mustapha\\OneDrive\\Desktop\\React\\awesome-quiz\\src\\index.js":"1","C:\\Users\\Sani Mustapha\\OneDrive\\Desktop\\React\\awesome-quiz\\src\\FetchQuestions.js":"2","C:\\Users\\Sani Mustapha\\OneDrive\\Desktop\\React\\awesome-quiz\\src\\App.js":"3","C:\\Users\\Sani Mustapha\\OneDrive\\Desktop\\React\\awesome-quiz\\src\\components\\Header\\Header.jsx":"4","C:\\Users\\Sani Mustapha\\OneDrive\\Desktop\\React\\awesome-quiz\\src\\components\\Question\\Question.jsx":"5"},{"size":161,"mtime":1607603638480,"results":"6","hashOfConfig":"7"},{"size":248,"mtime":1607604973781,"results":"8","hashOfConfig":"7"},{"size":1272,"mtime":1607635547796,"results":"9","hashOfConfig":"7"},{"size":656,"mtime":1607609507876,"results":"10","hashOfConfig":"7"},{"size":2254,"mtime":1607638392575,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1r7zas",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},"C:\\Users\\Sani Mustapha\\OneDrive\\Desktop\\React\\awesome-quiz\\src\\index.js",[],["24","25"],"C:\\Users\\Sani Mustapha\\OneDrive\\Desktop\\React\\awesome-quiz\\src\\FetchQuestions.js",[],"C:\\Users\\Sani Mustapha\\OneDrive\\Desktop\\React\\awesome-quiz\\src\\App.js",[],"C:\\Users\\Sani Mustapha\\OneDrive\\Desktop\\React\\awesome-quiz\\src\\components\\Header\\Header.jsx",[],"C:\\Users\\Sani Mustapha\\OneDrive\\Desktop\\React\\awesome-quiz\\src\\components\\Question\\Question.jsx",["26","27","28"],"import React, { useState, useEffect } from \"react\";\r\nimport { shuffle } from \"lodash\";\r\n\r\nconst Question = ({questions}) => {\r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n    const [showScore, setShowScore] = useState(false);\r\n    const [answers, setAnswers] = useState([]);\r\n\r\n    // useEffect(() => {\r\n    //     const { correct_answer, incorrect_answers } = questions[\r\n    //         currentQuestion\r\n    //     ];\r\n    //     const answers = [...incorrect_answers, correct_answer];\r\n    //     const result = shuffle(answers);\r\n    //     setAnswers(result);\r\n    // }, []);\r\n\r\n    // setAnswers(() => {\r\n    //     const { correct_answer, incorrect_answers } = questions[\r\n    //         currentQuestion\r\n    //     ];\r\n    //     const answers = [...incorrect_answers, correct_answer];\r\n    //     const result = shuffle(answers);\r\n    //     return result;\r\n    // })\r\n\r\n    // TODO: fix re-render issue and getting answers to display correctly issue\r\n\r\n    const handleClick = (index) => {\r\n        if(questions[index] === questions[currentQuestion].correct_answer) {\r\n            alert(\"Correct!!!\");\r\n        }\r\n        const nextQuestion = currentQuestion + 1;\r\n        if(nextQuestion < questions.length) {\r\n            setCurrentQuestion(nextQuestion);\r\n        }else {\r\n            setShowScore(true);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"question\">\r\n            {\r\n                showScore ? <h1>You scored 0 out of 20</h1> :\r\n                <>\r\n                    <div className=\"question--box\">\r\n                        <p>{questions[currentQuestion].question}</p>\r\n                    </div>\r\n                    <div className=\"answers--container\">\r\n                        {answers.map((answer, index) => (\r\n                            <button\r\n                                onClick={ () => handleClick(index) }\r\n                                key={answer}\r\n                                className=\"answer\"\r\n                            >\r\n                                {answer}\r\n                            </button>\r\n                        ))}\r\n                    </div>\r\n                </>\r\n            }\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Question;\r\n",{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","severity":1,"message":"34","line":1,"column":27,"nodeType":"35","messageId":"36","endLine":1,"endColumn":36},{"ruleId":"33","severity":1,"message":"37","line":2,"column":10,"nodeType":"35","messageId":"36","endLine":2,"endColumn":17},{"ruleId":"33","severity":1,"message":"38","line":7,"column":21,"nodeType":"35","messageId":"36","endLine":7,"endColumn":31},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'shuffle' is defined but never used.","'setAnswers' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]